@model DBModel.ET.News

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section ClienCSS{
    <!-- DataTables -->
    <link rel="stylesheet" href="~/Content/admin/bower_components/datatables.net-bs/css/dataTables.bootstrap.min.css">
    <!-- iCheck for checkboxes and radio inputs -->
    <link rel="stylesheet" href="~/Content/admin/plugins/iCheck/all.css">
    <link rel="stylesheet" href="~/Content/admin/bower_components/bootstrap-daterangepicker/daterangepicker.css">
    <!-- bootstrap datepicker -->
    <link rel="stylesheet" href="~/Content/admin/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">
    <!-- Select2 -->
    <link rel="stylesheet" href="~/Content/admin/bower_components/select2/dist/css/select2.min.css">
    <script src="~/Content/admin/js/plugins/ckfinder/ckfinder.js"></script>
    <script src="~/Content/admin/js/plugins/ckeditor/ckeditor.js"></script>

    <script type="text/javascript">
        function BrowseServer(field) {
            editedField = field;
            var finder = new CKFinder();
            //finder.basePath = '../';
            finder.lang = 'vi'
            finder.selectActionFunction = SetFileField;
            finder.popup();
        }
        function SetFileField(fileUrl) {
            document.getElementById(editedField).value = fileUrl;
            document.getElementById('imgIcon').src = fileUrl;
        }


    </script>
}
@section ContenHeader{
    <section class="content-header">
        <h1>
            Tạo mới danh mục tin
        </h1>
        <ol class="breadcrumb">
            <li>
                @Html.ActionLink(@Resources.ResourceAdmin.AdminFunctionBackButtonText, "Index", null, new { @class = "btn btn-primary" })
            </li>
        </ol>
    </section>
}
@section FooterClienScript{

    <!-- Select2 -->
    <script src="~/Content/admin/bower_components/select2/dist/js/select2.full.min.js"></script>
    <script src="~/Content/admin/bower_components/bootstrap-daterangepicker/daterangepicker.js"></script>
    <!-- bootstrap datepicker -->
    <script src="~/Content/admin/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <!-- bootstrap color picker -->
    <script src="~/Content/admin/bower_components/bootstrap-colorpicker/dist/js/bootstrap-colorpicker.min.js"></script>
    <!-- bootstrap time picker -->
    <script src="~/Content/admin/plugins/timepicker/bootstrap-timepicker.min.js"></script>
    <!-- iCheck 1.0.1 -->
    <script src="~/Content/admin/plugins/iCheck/icheck.min.js"></script>
    <!-- DataTables -->
    <script src="~/Content/admin/bower_components/datatables.net/js/jquery.dataTables.min.js"></script>
    <script src="~/Content/admin/bower_components/datatables.net-bs/js/dataTables.bootstrap.min.js"></script>
    <!-- FastClick -->
    <script src="~/Content/admin/bower_components/fastclick/lib/fastclick.js"></script>
    <script>
        $(function () {



            //Date picker
            $('#UpTopHot').datepicker({
                autoclose: true
                //format:'dd/mm/yyyy'
            })
            $('#UpTopNew').datepicker({
                autoclose: true
            })
            $('#LockedDate').datepicker({
                autoclose: true
            })
            $('.select2').select2()

        })
        CKEDITOR.replace('ContentHtml');
        $('#frmAbout').on('submit', function () {
            for (instance in CKEDITOR.instances) {
                CKEDITOR.instances[instance].updateElement();
            }
        });

    </script>

}
<section class="content">
    <!-- Default box -->
    <div class="box">
        <div class="box-body">
            @using (Html.BeginForm("Edit", "News", FormMethod.Post, new { @class = "form-horizontal", id = "frmAbout" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.NewsID, new { @class = "text-danger",@id= "NewsID" } )
                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Tiêu đề", @required = "required" })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MetaTite, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.MetaTite, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MetaTite, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MetakeyWords, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.MetakeyWords, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MetakeyWords, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MetaDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.MetaDescription, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MetaDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Tags, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ContentHtml, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.ContentHtml, new { @class = "form-control", @autoforcus = "autoforcus", @placeholder = "Nội dung", id = "ContentHtml" })
                            @Html.ValidationMessageFor(model => model.ContentHtml, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Image, new { @class = "form-control" })
                            <a href="#" class="btn btn-primary" onclick="BrowseServer('Image');">Chọn ảnh..</a>
                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            <img width="30" src="@(Convert.ToString(Html.DisplayFor(model => model.Image)))" id="imgIcon" class="img-circle" alt="User Image">
                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CategoryID, (MultiSelectList)ViewBag.CategoryID, new { @class = "form-control select2", @multiple = "multiple", @required = "required" })
                            @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.UpTopNew, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.UpTopNew, (string)ViewBag.UpTopNew, new { @class = "form-control", @autoforcus = "autoforcus", id = "UpTopNew", @placeholder = "MM/dd/yyyy", @required = "required" })
                            @Html.ValidationMessageFor(model => model.UpTopNew, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.UpTopHot, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.UpTopHot, (string)ViewBag.UpTopHot, new { @class = "form-control", @autoforcus = "autoforcus", id = "UpTopHot", @placeholder = "MM/dd/yyyy", @required = "required" })
                            @Html.ValidationMessageFor(model => model.UpTopHot, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.ShowShare, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.DropDownListFor(model => model.ShowShare, new List<SelectListItem> { new SelectListItem { Text = "Cho phép chia sẻ", Value = "True" }, new SelectListItem { Text = "Không cho phép", Value = "false" } }, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ShowShare, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ShowConment, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.DropDownListFor(model => model.ShowConment, new List<SelectListItem> { new SelectListItem { Text = "Cho phép bình luận", Value = "True" }, new SelectListItem { Text = "Không cho phép", Value = "false" } }, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ShowConment, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Source, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Source, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Source, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-12">
                            <input type="submit" value="@Resources.ResourceAdmin.AdminSaveButtonText" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            }

        </div>
        <!-- /.box-body -->
    </div>
    <!-- /.box -->
</section>
